hello!

hope you liked the first lecture, bear with us as this is our first time doing the NMP.

Assignment:
Your deliverable will be in 2 files:
logistic.py
linear.py
accuracies.txt


Both should contain classes that implement linear and logistic regression, with details as follows:
Both classes should have a fit() function, which trains the model's parameters to optimize the loss.
Both should be able to do batch gradient descent and stochastic gradient descent.

Both classes should have a predict() function, which takes an input numpy vector "inputs", which is batch_size * # of inputs  and return a numpy vector "outputs". For logistic regression, outputs will be a single scalar probability between 0 and 1, and linear regression should work with an arbitrary number of inputs and outputs.

Your linear class should be able to fit using the normal equations as well (directly solve using matrices instead of gradient descent). 

You should have a way to plot your loss each time you train (except the normal equations ofc), using matplotlib, and a way to save these charts. Details will be up to you, but the graph should be loss vs. steps of gradient descent.

Experiment with different learning rates and batch sizes if you like, just get some plots and converge on the data, which we've provided for you.

DATA: For linear regression, there is a kaggle.com link which contains a .csv. Predict housing prices using your model.
For logistic regression, it is a bit more sophisticated:
There is a famous ML dataset you've probably heard of called the iris dataset. Iris has 3 classes of flower based on sepal / petal length / width, 4 continuous variables. Because it is 3 classes, you would have to use softmax regression. However, we're not that cruel yet so you will only use logistic regression.

How? Do some data manipulation and train a 1 vs all classifier on each type of iris, and record the accuracy for each, resulting in 3 accuracy numbers. Which is the hardest to predict on, based on accuracy?
(For each Iris class: Make a new copy of the data where the label is 1 if it is that class, and 0 if it is not. Train the Logistic Regression on this data. Record accuracy in accuracies.txt however you like)

RULES: only numpy, matplotlib, pandas, and standard libraries. do not use sklearn/tf/anythinglikethat. Don't use pseudo inverses from numpy either. Use your best judgement, this is for your learning in the end.

I'm aware this isn't a lot of direction, which is intentional. DM us if you have questions, don't copy things from online obviously and don't procrastinate too much. We'll message you with more details on submitting etc. and logstics and such. Again, sorry if things seem haphazard - this is our first time doing this, so bear with us. Enjoy! I've added some skeleton code.
